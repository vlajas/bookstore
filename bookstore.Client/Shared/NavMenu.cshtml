@using bookstore.Client.Services

@inject StateContainer StateContainer

<div class="top-row pl-4 navbar navbar-dark">
    <a class="navbar-brand" href="">bookstore</a>
    <button class="navbar-toggler" onclick=@ToggleNavMenu>
        <span class="navbar-toggler-icon"></span>
    </button>
</div>

<div class=@(_collapseNavMenu ? "collapse" : null) onclick=@ToggleNavMenu>
    <ul class="nav flex-column">
        <li class="nav-item px-3">
            <NavLink class="nav-link" href="" Match=NavLinkMatch.All>
                <span class="oi oi-home" aria-hidden="true"></span> Home
            </NavLink>
        </li>
        @if (StateContainer.CurrentUser != null)
        {
            if (StateContainer.CurrentUser.Roles.Contains("admin"))
            {
                <li class="nav-item px-3">
                    <NavLink class="nav-link" href="user">
                        <span class="oi oi-person" aria-hidden="true"></span> Users
                    </NavLink>
                </li>
                <li class="nav-item px-3">
                    <NavLink class="nav-link" href="book">
                        <span class="oi oi-book" aria-hidden="true"></span> Books
                    </NavLink>
                </li>
            }
            <li class="nav-item px-3" style="cursor: pointer">
                <a class="nav-link" onclick="@SignOut" style="color: #d7d7d7">
                    <span class="oi oi-account-logout" aria-hidden="true"></span> Sign Out
                </a>
            </li>
        }
        else
        {
            <li class="nav-item px-3">
                <NavLink class="nav-link" href="login">
                    <span class="oi oi-account-login" aria-hidden="true"></span> Sign In
                </NavLink>
            </li>
        }
    </ul>
</div>

@functions {
    bool _collapseNavMenu = true;

    protected override void OnInit()
    {
        StateContainer.OnChange += StateHasChanged;
    }

    private void ToggleNavMenu()
    {
        _collapseNavMenu = !_collapseNavMenu;
    }

    private void SignOut()
    {
        StateContainer.CurrentUser = null;

        StateContainer.NotifyStateChanged();
    }
}
