@page "/login"
@using bookstore.Client.Services
@using bookstore.Core.Models
@using bookstore.Shared.Api
@using Microsoft.AspNetCore.Blazor.Services

@inject HttpClient Http
@inject IUriHelper UriHelper
@inject StateContainer StateContainer

<h1>Sign In</h1>

<hr />

<div class="row">
    <div class="col-md-4">
        <div class="form-group">
            <label for="Username" class="control-label">Username</label>
            <input for="Username" class="form-control" bind="@_authRequest.Username" />
        </div>
        <div class="form-group">
            <label for="Password" class="control-label">Password</label>
            <input class="form-control @(_invalidRequest ? "is-invalid" : string.Empty)" type="password" for="Password" bind="@_authRequest.Password" />
            <div class="invalid-feedback">
                Login request was unsuccessful.
            </div>
        </div>
        <div class="form-group">
            <button class="btn btn-primary" onclick="@(async () => await SignIn())">Sign In</button>
        </div>
    </div>
</div>  

@functions
{
    private readonly AuthorizationRequest _authRequest = new AuthorizationRequest();

    private bool _invalidRequest = false;

    private async Task SignIn()
    {
        AuthorizationResponse response = await Http.PostJsonAsync<AuthorizationResponse>(AccountApi.Authorize, _authRequest);

        if (response.AuthorizationStatus == AuthorizationStatus.Success)
        {
            StateContainer.CurrentUser = response.User;

            StateContainer.NotifyStateChanged();

            UriHelper.NavigateTo("/");
        }
        else
        {
            _authRequest.Password = string.Empty;

            _invalidRequest = true;

            StateHasChanged();
        }
    }
}
