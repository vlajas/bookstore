@page "/order/{OrderId}"
@using System.Globalization
@using bookstore.Shared.Entities
@inject HttpClient Http

<div class="container-fluid">
    <div class="row">
        <div class="col-md-10">
            <h1>Order Details</h1>
        </div>
        <div class="col-md-2">
        </div>
    </div>

    <div style="margin-top: 25px">
        @if (_order == null)
        {
            <div class="d-flex justify-content-center">
                <div class="spinner-border" role="status">
                    <span class="sr-only">Loading...</span>
                </div>
            </div>
        }
        else
        {
            <table class="table table-striped table-bordered table-hover table-condensed">
                <thead>
                    <tr>
                        <th class="text-center" style="width: 25%">Cover</th>
                        <th class="text-center" style="width: 25%">Title</th>
                        <th class="text-center" style="width: 25%">Quantity</th>
                        <th class="text-center" style="width: 25%">Price</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (OrderItem orderItem in _order.OrderItems)
                    {
                        <tr>
                            <td class="text-center align-middle">
                                @if (!string.IsNullOrWhiteSpace(orderItem.Book.ImageUrl))
                                {
                                    <img src="@orderItem.Book.ImageUrl" alt="@orderItem.Book.Title" width="80" height="120" />
                                }
                            </td>
                            <td class="text-center align-middle">@orderItem.Book.Title</td>
                            <td class="text-center align-middle">
                                <input type="number" style="width: 70px; text-align: center" min="1" bind="@orderItem.Quantity" />
                            </td>
                            <td class="text-center align-middle">@orderItem.Price.ToString("c2", new CultureInfo("sr-Latn-RS"))</td>
                        </tr>
                    }
                </tbody>
                <tfoot>
                    <tr>
                        <td colspan="3"></td>
                        <td class="text-center">
                            Order total: <span style="color: red">@_order.OrderItems.Sum(x => x.Quantity * x.Price).ToString("c2", new CultureInfo("sr-Latn-RS"))</span>
                        </td>
                    </tr>
                </tfoot>
            </table>
        }
    </div>

</div>

@functions
{
    [Parameter]
    private string OrderId { get; set; }

    private Order _order;

    protected override async Task OnInitAsync()
    {
        _order = await Http.GetJsonAsync<Order>($"api/order/getOrder/{OrderId}");

        StateHasChanged();
    }
}
